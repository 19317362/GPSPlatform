// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: IdentityServer4Service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GPS.IdentityServer4GrpcServiceBase {
  public static partial class IdentityServer4ServiceGrpc
  {
    static readonly string __ServiceName = "GPS.IdentityServer4GrpcServiceBase.IdentityServer4ServiceGrpc";

    static readonly grpc::Marshaller<global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenRequest> __Marshaller_GPS_IdentityServer4GrpcServiceBase_GenerateTokenRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenReply> __Marshaller_GPS_IdentityServer4GrpcServiceBase_GenerateTokenReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenRequest> __Marshaller_GPS_IdentityServer4GrpcServiceBase_VerifyTokenRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenReply> __Marshaller_GPS_IdentityServer4GrpcServiceBase_VerifyTokenReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenRequest> __Marshaller_GPS_IdentityServer4GrpcServiceBase_RefreshTokenRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenReply> __Marshaller_GPS_IdentityServer4GrpcServiceBase_RefreshTokenReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenReply.Parser.ParseFrom);

    static readonly grpc::Method<global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenRequest, global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenReply> __Method_GenerateToken = new grpc::Method<global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenRequest, global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateToken",
        __Marshaller_GPS_IdentityServer4GrpcServiceBase_GenerateTokenRequest,
        __Marshaller_GPS_IdentityServer4GrpcServiceBase_GenerateTokenReply);

    static readonly grpc::Method<global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenRequest, global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenReply> __Method_VerifyToken = new grpc::Method<global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenRequest, global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyToken",
        __Marshaller_GPS_IdentityServer4GrpcServiceBase_VerifyTokenRequest,
        __Marshaller_GPS_IdentityServer4GrpcServiceBase_VerifyTokenReply);

    static readonly grpc::Method<global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenRequest, global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenReply> __Method_RefreshToken = new grpc::Method<global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenRequest, global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RefreshToken",
        __Marshaller_GPS_IdentityServer4GrpcServiceBase_RefreshTokenRequest,
        __Marshaller_GPS_IdentityServer4GrpcServiceBase_RefreshTokenReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GPS.IdentityServer4GrpcServiceBase.IdentityServer4ServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of IdentityServer4ServiceGrpc</summary>
    public abstract partial class IdentityServer4ServiceGrpcBase
    {
      /// <summary>
      /// ∞‰≤º¡Ó≈∆
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenReply> GenerateToken(global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// »œ÷§¡Ó≈∆
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenReply> VerifyToken(global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// À¢–¬¡Ó≈∆
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenReply> RefreshToken(global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for IdentityServer4ServiceGrpc</summary>
    public partial class IdentityServer4ServiceGrpcClient : grpc::ClientBase<IdentityServer4ServiceGrpcClient>
    {
      /// <summary>Creates a new client for IdentityServer4ServiceGrpc</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public IdentityServer4ServiceGrpcClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for IdentityServer4ServiceGrpc that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public IdentityServer4ServiceGrpcClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected IdentityServer4ServiceGrpcClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected IdentityServer4ServiceGrpcClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// ∞‰≤º¡Ó≈∆
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenReply GenerateToken(global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ∞‰≤º¡Ó≈∆
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenReply GenerateToken(global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateToken, null, options, request);
      }
      /// <summary>
      /// ∞‰≤º¡Ó≈∆
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenReply> GenerateTokenAsync(global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// ∞‰≤º¡Ó≈∆
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenReply> GenerateTokenAsync(global::GPS.IdentityServer4GrpcServiceBase.GenerateTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateToken, null, options, request);
      }
      /// <summary>
      /// »œ÷§¡Ó≈∆
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenReply VerifyToken(global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// »œ÷§¡Ó≈∆
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenReply VerifyToken(global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyToken, null, options, request);
      }
      /// <summary>
      /// »œ÷§¡Ó≈∆
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenReply> VerifyTokenAsync(global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// »œ÷§¡Ó≈∆
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenReply> VerifyTokenAsync(global::GPS.IdentityServer4GrpcServiceBase.VerifyTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyToken, null, options, request);
      }
      /// <summary>
      /// À¢–¬¡Ó≈∆
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenReply RefreshToken(global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RefreshToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// À¢–¬¡Ó≈∆
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenReply RefreshToken(global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RefreshToken, null, options, request);
      }
      /// <summary>
      /// À¢–¬¡Ó≈∆
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenReply> RefreshTokenAsync(global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RefreshTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// À¢–¬¡Ó≈∆
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenReply> RefreshTokenAsync(global::GPS.IdentityServer4GrpcServiceBase.RefreshTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RefreshToken, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override IdentityServer4ServiceGrpcClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new IdentityServer4ServiceGrpcClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(IdentityServer4ServiceGrpcBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GenerateToken, serviceImpl.GenerateToken)
          .AddMethod(__Method_VerifyToken, serviceImpl.VerifyToken)
          .AddMethod(__Method_RefreshToken, serviceImpl.RefreshToken).Build();
    }

  }
}
#endregion
